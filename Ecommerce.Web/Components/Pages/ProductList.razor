@page "/products"
@using Ecommerce.Model
@inject HttpClient http

<PageTitle>Products</PageTitle>

<h3>Products</h3>

<div class="w-100">
    <SearchBox Items="Products" OnSearch="UpdateFilteredProducts"></SearchBox>
</div>

<p></p>

<div class="row">
    @foreach(var product in FilteredProducts)
    {
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <img src="/Images/@product.PhotoName" width="300" height="300" class="rounded-top" asp-append-version="true" alt="Picture"/>
                    <h5 class="card-title">@product.Name</h5>
                    <p class="card-text">@product.About</p>
                    <p class="card-text">Price: €@product.Price</p>
                    <p class="card-text">Quantity: @product.Quantity</p>
                    <a href="/cart/@product.Id" class="btn btn-primary">Buy</a>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<ProductModel> Products = new List<ProductModel>();
    private List<ProductModel> FilteredProducts = new List<ProductModel>();

    protected override async Task OnInitializedAsync()
    {
        Products = await http.GetFromJsonAsync<List<ProductModel>>("https://localhost:7261/api/product");
        FilteredProducts = Products;
        await base.OnInitializedAsync();
    }

    public void UpdateFilteredProducts(string searchTerm)
    {
        if (string.IsNullOrEmpty(searchTerm))
        {
            FilteredProducts = Products;
        }
        else
        {
            FilteredProducts = Products.Where(product => product.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) || product.About.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();
        }
    }
}
